{
	"name": "ue4-intellisense-fixes",
	"displayName": "UE4 Intellisense Fixes",
	"description": "Automatically fixes UE4 Intellisense on startup.",
	"version": "0.9.5",
	"publisher": "boocs",
	"license": "SEE LICENSE IN THE FILE: LICENSE",
	"repository": {
		"type": "git",
		"url": "https://github.com/boocs/ue4-intellisense-fixes.git"
	},
	"bugs": {
		"url": "https://github.com/boocs/ue4-intellisense-fixes/issues"
	},
	"engines": {
		"vscode": "^1.52.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"workspaceContains:*.uproject"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": {
			"title": "UE4 Intellisense fixes",
			"properties": {
				"UE4IntellisenseFixes.v426.compileCommands.enableFix": {
					"type": "boolean",
					"markdownDescription": "`(Fix)` Fixes No Compiler, Invalid Paths, and Backup Intellisense.",
					"default": false,
					"scope": "application"
				},
				"UE4IntellisenseFixes.v426.pathSubstring": {
					"type": "string",
					"markdownDescription": "*(Don't change unless this extension can't identify your UE4 version.)* Use a small unique substring of your UE 4.26 path.",
					"default": "UE_4.26",
					"scope": "application"
				},
				"UE4IntellisenseFixes.v425.enableFix": {
					"type": "boolean",
					"markdownDescription": "`(Fix)` Fixes No Defines and improves Tag Parser performace.",
					"default": false,
					"scope": "application"
				},
				"UE4IntellisenseFixes.v425.pathSubstring": {
					"type": "string",
					"markdownDescription": "*(Don't change unless this extension can't identify your UE4 version.)* Use a small unique substring of your UE 4.25 path.",
					"default": "UE_4.25",
					"scope": "application"
				},
				"UE4IntellisenseFixes.v426.enableGeneralIncludes" : {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Forces includePath setting to only contain UE4 Source and Intermediate folders instead of parsing compile command file for specific paths. Intellisense might be slower.",
					"scope": "application"
				},
				"UE4IntellisenseFixes.v426.includesRegex" : {
					"type": "string",
					"default": "(?<=-[IF]\")(.*?)(?=\")/gm",
					"markdownDescription": "Regex to parse include paths from compileCommands files. Pattern: \"Regex/Flags\" The / is required but Flags aren't. *(Only change if it can't parse paths correctly. `GCC/Clang:` may be affected.)*",
					"scope": "application"
				},
				"UE4IntellisenseFixes.v426.forcedRegex" : {
					"type": "string",
					"default": "(?<=-include \")(.*?)(?=\")/gm",
					"markdownDescription": "Regex to parse forced include file paths from compileCommands files. Pattern: \"Regex/Flags\" The / is required but Flags aren't. *(Only change if it can't parse paths correctly. `GCC/Clang:` may be affected.)*",
					"scope": "application"
				},
				"UE4IntellisenseFixes.v426.converter.enableFix" : {
					"type": "boolean",
					"default": false,
					"markdownDescription": "`(Alternate)` Converts back to old way of doing Intellisense instead of using compile commands. `(Will override Compile Command's Fix)`",
					"scope": "application"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.52.0",
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.4",
		"@types/node": "^12.11.7",
		"eslint": "^7.15.0",
		"@typescript-eslint/eslint-plugin": "^4.9.0",
		"@typescript-eslint/parser": "^4.9.0",
		"glob": "^7.1.6",
		"mocha": "^8.1.3",
		"typescript": "^4.1.2",
		"vscode-test": "^1.4.1"
	}
}